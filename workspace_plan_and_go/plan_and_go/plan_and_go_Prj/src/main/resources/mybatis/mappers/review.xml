<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  

<mapper namespace="mapper.review">

    <!-- 리뷰 결과 매핑 -->
    <resultMap id="reviewResult" type="ReviewVO">
        <result property="reviewId" column="REVIEW_ID" />
        <result property="reviewName" column="REVIEW_NAME" />
        <result property="tripRating" column="TRIP_RATING" />
        <result property="reviewContent" column="REVIEW_CONTENT" />
        <result property="createdDate" column="CREATED_DATE" />
        <result property="updatedDate" column="UPDATED_DATE" />
        <result property="memberId" column="MEMBER_ID" />
        <result property="activityId" column="ACTIVITY_ID" />
        <result property="regionName" column="REGION_NAME" />
    </resultMap>
    
    <resultMap id="activityResult" type="activityVO">
		<result property="ACTIVITY_ID" column="ACTIVITY_ID" />
		<result property="ACTIVITY_NAME" column="ACTIVITY_NAME" />
		<result property="ACTIVITY_TIME" column="ACTIVITY_TIME" />
		<result property="EXPECTED_COST" column="EXPECTED_COST" />
		<result property="ACTIVITY_DATE" column="ACTIVITY_DATE" />
		<result property="SCHEDULE_ID" column="SCHEDULE_ID" />
		<result property="PLACE_ID" column="PLACE_ID" />
		<result property="ACTUAL_COST" column="ACTUAL_COST" />
	</resultMap>


    <!-- 사용자가 선택할 활동 목록 불러오기 -->
    <select id="getActivityListByMemberId" parameterType="String" resultMap="activityResult">
        SELECT DISTINCT ac.ACTIVITY_ID, ac.ACTIVITY_NAME
        FROM MEMBER m
        JOIN GROUP_JOIN gj ON m.MEMBER_ID = gj.MEMBER_ID
        JOIN GROUP_TB gt ON gj.GROUP_ID = gt.GROUP_ID
        JOIN SCHEDULE sc ON gt.GROUP_ID = sc.GROUP_ID
        JOIN ACTIVITY ac ON sc.SCHEDULE_ID = ac.SCHEDULE_ID
        WHERE m.MEMBER_ID = #{memberId}
    </select>
    
    <!-- 리뷰 목록 조회 -->
    <select id="getReviews" resultMap="reviewResult">
        SELECT REVIEW_ID, REVIEW_NAME, TRIP_RATING, REVIEW_CONTENT, CREATED_DATE, UPDATED_DATE, MEMBER_ID, ACTIVITY_ID
        FROM REVIEW
    </select>

    <!-- 특정 리뷰 조회 -->
    <select id="getReviewById" parameterType="int" resultMap="reviewResult">
		SELECT ac.ACTIVITY_ID, r.REGION_ID, r.REGION_NAME, re.REVIEW_ID, re.REVIEW_NAME, re.TRIP_RATING, re.REVIEW_CONTENT, re.CREATED_DATE, re.UPDATED_DATE, re.MEMBER_ID
		FROM REVIEW AS re
		JOIN ACTIVITY AS ac
		ON re.ACTIVITY_ID = ac.ACTIVITY_ID
		JOIN PLACE AS pl
		ON ac.PLACE_ID = pl.PLACE_ID
		JOIN REGION AS r
		ON pl.REGION_ID = r.REGION_ID
		WHERE REVIEW_ID = #{reviewId}
        
    </select>
    
    

    <!-- 리뷰 삽입 -->
    <insert id="insertReview" parameterType="ReviewVO">
        INSERT INTO REVIEW (REVIEW_NAME, TRIP_RATING, REVIEW_CONTENT, CREATED_DATE, UPDATED_DATE, MEMBER_ID, ACTIVITY_ID)
        VALUES (#{reviewName}, #{tripRating}, #{reviewContent}, NOW(), NOW(), #{memberId}, #{activityId})
    </insert>

    <!-- 리뷰 수정 -->
<update id="updateReview" parameterType="ReviewVO">
    UPDATE REVIEW
    SET REVIEW_NAME = #{reviewName}, 
        TRIP_RATING = #{tripRating}, 
        REVIEW_CONTENT = #{reviewContent}
    WHERE REVIEW_ID = #{reviewId} AND REVIEW_NAME IS NOT NULL
</update>


    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM REVIEW WHERE REVIEW_ID = #{reviewId}
    </delete>

</mapper>
